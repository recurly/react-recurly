{"version":3,"file":"index-95c2f079.js","sources":["../../../lib/provider.jsx","../../../lib/elements.jsx","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../../lib/element/element.jsx","../../../lib/risk-data-collector.jsx","../../../lib/three-d-secure-action.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { version } from '../package.json';\n\nexport const RecurlyContext = React.createContext({ recurly: null });\n\nconst { Provider } = RecurlyContext;\n\n/**\n * This is the top-level component for `react-recurly`, and must wrap any other\n * `react-recurly` component you will use. It is responsible for creating a `Recurly.js`\n * instance for any descendant components to interact with.\n *\n * This component accepts your `publicKey` and other configuration options for Recurly.js as props.\n */\nexport default class RecurlyProvider extends React.Component {\n  static propTypes = {\n    /**\n     * Your Recurly public key. See\n     * [API Access](https://app.recurly.com/go/developer/api_access).\n     */\n    publicKey: PropTypes.string,\n\n    /**\n     * Register the current hostname\n     */\n    hostname: PropTypes.string,\n    /**\n     * Sets a default currency\n     */\n    currency: PropTypes.string,\n    /**\n     * Adds additional field requirements for tokenization. ex: ['cvv']\n     */\n    required: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * API request timeout in ms\n     */\n    timeout: PropTypes.number,\n    /**\n     * Fraud configuration. See the\n     * [Recurly-js docs on fraud configuration](https://developers.recurly.com/reference/recurly-js/index.html#fraud)\n     */\n    fraud: PropTypes.shape({\n      kount: PropTypes.shape({\n        dataCollector: PropTypes.bool\n      }),\n      braintree: PropTypes.shape({\n        deviceData: PropTypes.string\n      }),\n      litle: PropTypes.shape({\n        sessionId: PropTypes.string\n      })\n    })\n  };\n\n  static defaultProps = {\n    publicKey: ''\n  };\n\n  constructor (props) {\n    super(props);\n\n    if (!(this.props.publicKey || this.props.hostname)) {\n      throw new Error(`\n        Please pass your 'publicKey' value to this RecurlyProvider.\n        Example: <RecurlyProvider publicKey=\"MY_PUBLIC_KEY\">\n      `);\n    }\n\n    // TODO: ensure proper shape?\n    if (!window.recurly || !window.recurly.Recurly) {\n      throw new Error(`\n        Please load Recurly.js (https://js.recurly.com/v4/recurly.js) on this page prior to\n        loading your React application.\n      `);\n    }\n\n    const { children, ...options } = this.props;\n    this._recurly = fetchRecurlyInstance(options);\n\n    if (!RecurlyProvider.hasReportedInitialization && this._recurly.report) {\n      this._recurly.ready(() => {\n        this._recurly.report('react-recurly', { version });\n      });\n      RecurlyProvider.hasReportedInitialization = true;\n    }\n  }\n\n  render () {\n    return (\n      <Provider value={{ recurly: this._recurly }}>{this.props.children}</Provider>\n    );\n  }\n};\n\n/**\n * Retrieves a recurly instance from a cache on the Recurly class, or creates one\n * if none found on the cache key. This is used when the Provider is being\n * regularly re-instantiated\n *\n * @param  {object} options instance instantiation options\n * @return {Recurly}\n */\nfunction fetchRecurlyInstance (options) {\n  let cache = window.recurly.Recurly.__instanceCache = window.recurly.Recurly.__instanceCache || {};\n  const key = JSON.stringify(options);\n\n  const recurly = cache[key] || new window.recurly.Recurly();\n  recurly.configure(options);\n  cache[key] = recurly;\n\n  return recurly;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RecurlyContext } from './provider';\n\nexport const RecurlyElementsContext = React.createContext();\n\nconst { Provider } = RecurlyElementsContext;\n\nexport default class Elements extends React.Component {\n  static propTypes = {\n    /**\n     * Called when a user presses the <kbd>enter</kbd> key while\n     * focused on any descendant `*Element`.\n     */\n    onSubmit: PropTypes.func\n  };\n\n  static defaultProps = {\n    onSubmit: () => {}\n  };\n\n  static contextType = RecurlyContext;\n\n  constructor (props, context) {\n    super(props, context);\n\n    if (!context || !context.recurly) {\n      throw new Error('<Elements> must be within a <RecurlyProvider> tree.');\n    }\n\n    this._elements = this.context.recurly.Elements();\n    this._elements.on('submit', el => this.props.onSubmit(el));\n  }\n\n  render () {\n    const elements = this._elements;\n    return (\n      <Provider value={{ elements }}>{this.props.children}</Provider>\n    );\n  }\n};\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport { RecurlyElementsContext } from '../elements';\n\nconst noop = () => {};\nconst extractOptions = props => {\n  const { id, className, onChange, onBlur, onFocus, onReady, onSubmit, ...options } = props;\n  return options;\n};\n\n/**\n * An [Element](https://developers.recurly.com/reference/recurly-js/#elements)\n * component which wraps its Recurly.js analogue, passing configuration props to the underlying\n * Recurly.js Element and allowing event binding using props.\n */\nexport default class Element extends React.PureComponent {\n  static propTypes = {\n    /**\n     * Applied to the container.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Applied to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Called when the state of the Element changes.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * Called when a user blurs from the Element.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Called when a user focuses on the Element.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Called when the Element has finished initializing.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Called when a user presses the <kbd>enter</kbd> key while focused on the Element.\n     */\n    onSubmit: PropTypes.func,\n\n    /**\n     * Set style attributes for the Element.\n     * See [Styling Elements](https://developers.recurly.com/reference/recurly-js/#styling-elements)\n     * for available options.\n     */\n    style: PropTypes.object,\n\n    /**\n     * [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\n     * property to be applied to the outer iframe.\n     */\n    tabIndex: PropTypes.string\n  };\n\n  static defaultProps = {\n    id: undefined,\n    className: undefined,\n    onChange: state => {},\n    onBlur: noop,\n    onFocus: noop,\n    onReady: noop,\n    onSubmit: noop,\n    style: {},\n    tabIndex: undefined\n  };\n\n  static contextType = RecurlyElementsContext;\n\n  configureElement = memoize(\n    (element, options) => element && Object.keys(options).length > 0 && element.configure(options)\n  );\n\n  constructor (props, context) {\n    super(props, context);\n    const { elementClassName } = this.constructor;\n\n    if (!context || !context.elements) {\n      throw new Error(`<${elementClassName}> must be within an <Elements> tree.`);\n    }\n\n    this._container = React.createRef();\n  }\n\n  componentDidMount () {\n    const { elementClassName } = this.constructor;\n    const options = extractOptions(this.props);\n    const element = this._element = this.context.elements[elementClassName](options);\n\n    element.on('attach', (...args) => this.props.onReady(...args));\n    element.on('change', (...args) => this.props.onChange(...args));\n    element.on('blur', (...args) => this.props.onBlur(...args));\n    element.on('focus', (...args) => this.props.onFocus(...args));\n    element.on('submit', (...args) => this.props.onSubmit(...args));\n\n    this._element.attach(this._container.current);\n  }\n\n  componentWillUnmount () {\n    this._element.destroy();\n  }\n\n  render () {\n    const { _element: element, props } = this;\n\n    this.configureElement(element, extractOptions(props));\n\n    return (\n      <div\n        id={props.id}\n        className={props.className}\n        ref={this._container}\n      />\n    );\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RecurlyContext } from './provider';\n\nexport const RISK_STRATEGIES = ['kount'];\n\n/**\n * Injects risk data collection point in your checkout.\n *\n * <https://docs.recurly.com/docs/kount>\n */\nexport default class RiskDataCollector extends React.Component {\n  static propTypes = {\n    /**\n     * Applied to the container.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Applied to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Risk data collection strategy.\n     *\n     * Possible values: 'kount'\n     */\n    strategy: PropTypes.oneOf(RISK_STRATEGIES),\n\n    /**\n     * Called when an error is encountered\n     * @type {FraudDataCollector~onError}\n     */\n\n    /**\n     * @callback FraudDataCollector~onError\n     * @param {RecurlyError}\n     */\n    onError: PropTypes.func\n  };\n\n  static defaultProps = {\n    id: undefined,\n    className: undefined,\n    strategy: RISK_STRATEGIES[0],\n    onError: e => { throw e }\n  };\n\n  static contextType = RecurlyContext;\n\n  constructor (props, context) {\n    super(props, context);\n\n    if (!context || !context.recurly) {\n      throw new Error('<RiskDataCollector> must be within a <RecurlyProvider> tree.');\n    }\n\n    /**\n     * TODO\n     * Once recurly.Fraud is decommissioned in favor of recurly.Risk.FraudConcern,\n     * this will change to consume a RiskProvider.\n     */\n    this._container = React.createRef();\n    this._recurly = this.context.recurly;\n  }\n\n  componentDidMount () {\n    const { _container: container, _recurly: recurly } = this;\n    const { strategy, onError } = this.props;\n\n    recurly.configure({ fraud: { [strategy]: { dataCollector: true, form: container.current } } });\n    const fraud = this._fraud = recurly.fraud;\n    fraud.on('error', (...args) => onError(...args));\n  }\n\n  render () {\n    return (\n      <div\n        id={this.props.id}\n        className={this.props.className}\n        ref={this._container}\n      />\n    );\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RecurlyContext } from './provider';\n\nexport default class ThreeDSecureAction extends React.PureComponent {\n  static propTypes = {\n    /**\n     * Applied to the container.\n     */\n    id: PropTypes.string,\n\n    /**\n     * Applied to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * `three_d_secure_action_token_id` returned by the Recurly API when 3-D Secure\n     * authentication is required for a transaction.\n     */\n    actionTokenId: PropTypes.string,\n\n    /**\n     * Called when the user has completed the 3D Secure flow\n     * @type {ThreeDSecureAction~onToken}\n     */\n\n    /**\n     * @callback ThreeDSecureAction~onToken\n     * @param {ThreeDSecureActionResultToken}\n     */\n    onToken: PropTypes.func,\n\n    /**\n     * Called when an error is encountered\n     * @type {ThreeDSecureAction~onError}\n     */\n\n    /**\n     * @callback ThreeDSecureAction~onError\n     * @param {RecurlyError}\n     */\n    onError: PropTypes.func\n  };\n\n  static defaultProps = {\n    id: undefined,\n    className: undefined,\n    actionTokenId: '',\n    onToken: () => {},\n    onError: e => { throw e }\n  };\n\n  static contextType = RecurlyContext;\n\n  constructor (props, context) {\n    super(props, context);\n\n    if (!context || !context.recurly) {\n      throw new Error('<ThreeDSecureAction> must be within a <RecurlyProvider> tree.');\n    }\n\n    const { actionTokenId } = props;\n\n    this._container = React.createRef();\n    this._risk = this.context.recurly.Risk();\n    this._threeDSecure = this._risk.ThreeDSecure({ actionTokenId });\n    this._threeDSecure.on('token', (...args) => this.props.onToken(...args));\n    this._threeDSecure.on('error', (...args) => this.props.onError(...args));\n  }\n\n  componentDidMount () {\n    this._threeDSecure.attach(this._container.current);\n  }\n\n  render () {\n    return (\n      <div\n        id={this.props.id}\n        className={this.props.className}\n        ref={this._container}\n      />\n    );\n  }\n};\n"],"names":["RecurlyContext","React","Provider","_RecurlyProvider","props","children","options","fetchRecurlyInstance","version","jsx","RecurlyProvider","__publicField","PropTypes","cache","key","recurly","RecurlyElementsContext","Elements","context","el","elements","safeIsNaN","value","isEqual","first","second","areInputsEqual","newInputs","lastInputs","i","memoizeOne","resultFn","memoized","newArgs","_i","lastResult","noop","extractOptions","id","className","onChange","onBlur","onFocus","onReady","onSubmit","Element","memoize","element","elementClassName","args","state","RISK_STRATEGIES","RiskDataCollector","container","strategy","onError","e","ThreeDSecureAction","actionTokenId"],"mappings":"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","x_google_ignoreList":[2]}